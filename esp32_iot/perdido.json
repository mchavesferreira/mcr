[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "7e696e3fa88a6135",
        "type": "http in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "url": "/comandoled",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 280,
        "wires": [
            [
                "1580f6ddfd8751da",
                "549d2f1ed713a347"
            ]
        ]
    },
    {
        "id": "1580f6ddfd8751da",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Alterar variável",
        "func": "// Recebe os dados da requisição POST\nvar dados = msg.payload;\n\n// Altera a variável booleana com base nos dados recebidos\nif (dados.valor === \"on\") {\n    global.set(\"minha_variavel\", true);\n} else {\n    global.set(\"minha_variavel\", false);\n}\n\n// Envia uma resposta à requisição\nmsg.payload = dados.valor;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 280,
        "wires": [
            [
                "97680c0cb31ac0f3",
                "549d2f1ed713a347"
            ]
        ]
    },
    {
        "id": "97680c0cb31ac0f3",
        "type": "http response",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "34106767dbeecbcc",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "stat/tasmotatemp32/POWER",
        "qos": "0",
        "datatype": "auto",
        "broker": "",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 350,
        "y": 560,
        "wires": [
            [
                "af7538174cd8a868",
                "e81f134b2b2fa052"
            ]
        ]
    },
    {
        "id": "e81f134b2b2fa052",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "resultpower",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 400,
        "wires": []
    },
    {
        "id": "af7538174cd8a868",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "tab": "",
        "name": "Relay state",
        "group": "39002dd15c031885",
        "order": 9,
        "format": "<div layout=\"row\" layout-align=\"space-between\">\n    <p>Relay state</p>\n    <p ng-style=\"{color: msg.payload === 'on' ? 'blue' : 'grey'}\">\n        <b>{{msg.payload === 'on' ? 'on' : 'off'}}</b>\n    </p>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "x": 670,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "81de76f90bed1e2d",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "stat/tasmota_16ch/POWER2",
        "qos": "2",
        "datatype": "auto",
        "broker": "5bd0bd86.98cecc",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 350,
        "y": 700,
        "wires": [
            [
                "0a2c08f78aa4dfa4"
            ]
        ]
    },
    {
        "id": "0a2c08f78aa4dfa4",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 700,
        "wires": [
            [
                "9251c9570185e733"
            ],
            [
                "6271f1e94df7cdb9"
            ]
        ]
    },
    {
        "id": "9251c9570185e733",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 660,
        "wires": [
            [
                "b59260964570c45b"
            ]
        ]
    },
    {
        "id": "6271f1e94df7cdb9",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 760,
        "wires": [
            [
                "b59260964570c45b"
            ]
        ]
    },
    {
        "id": "b59260964570c45b",
        "type": "ui_led",
        "z": "f6f2187d.f17ca8",
        "order": 3,
        "group": "22270f80c7aa35a5",
        "width": 0,
        "height": 0,
        "label": "Saida 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "showGlow": true,
        "name": "",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "544b65042b069d8c",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "cmnd/tasmotaluminaria/power",
        "qos": "0",
        "retain": "",
        "broker": "",
        "x": 620,
        "y": 880,
        "wires": []
    },
    {
        "id": "0a03d53b08ebce97",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 360,
        "y": 880,
        "wires": [
            [
                "544b65042b069d8c"
            ]
        ]
    },
    {
        "id": "9a7a43160fbe8364",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 360,
        "y": 920,
        "wires": [
            [
                "544b65042b069d8c"
            ]
        ]
    },
    {
        "id": "72a77a492c558cca",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "toggle",
        "payloadType": "str",
        "x": 360,
        "y": 960,
        "wires": [
            [
                "544b65042b069d8c"
            ]
        ]
    },
    {
        "id": "fadde5154572fdaf",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "blink",
        "payloadType": "str",
        "x": 360,
        "y": 1000,
        "wires": [
            [
                "544b65042b069d8c"
            ]
        ]
    },
    {
        "id": "549d2f1ed713a347",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "ad46570c.7c11d8",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1150,
        "y": 380,
        "wires": [
            [
                "a5ca5a5d.8d7fd"
            ]
        ]
    },
    {
        "id": "a5ca5a5d.8d7fd",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "Cotação Dólar",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://economia.awesomeapi.com.br/json/last/USD-BRL",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "7f25f1d1.a10eb8",
                "76d173da70211228"
            ]
        ]
    },
    {
        "id": "7f25f1d1.a10eb8",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1400,
        "y": 460,
        "wires": [
            [
                "d6f506b6.2129b8",
                "22ed231a9ad130c8"
            ]
        ]
    },
    {
        "id": "d6f506b6.2129b8",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Formatar Dólar",
        "func": "var high = msg.payload.USDBRL.high;\nvar low = msg.payload.USDBRL.low;\n\nmsg.payload = `O preço atual do dólar é ${high} (alta) / ${low} (baixa).`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 460,
        "wires": [
            [
                "8900313a.6596f8",
                "d29a739ae590e316"
            ]
        ]
    },
    {
        "id": "8900313a.6596f8",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "name": "Cotação Dólar",
        "group": "ca22fa0e.65a208",
        "order": 1,
        "format": "<div style=\"text-align:center;font-size:30px\">{{msg.payload}}</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 1790,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "76d173da70211228",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 520,
        "wires": []
    },
    {
        "id": "22ed231a9ad130c8",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 520,
        "wires": []
    },
    {
        "id": "d29a739ae590e316",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 520,
        "wires": []
    },
    {
        "id": "ec6a00d39ca4cb03",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "function 4",
        "func": "    var dados = msg.payload.USDBRL;\n\n    // Separando cada campo\n    msg.payload = {\n        code: dados.code,\n        codein: dados.codein,\n        name: dados.name,\n        high: dados.high,\n        low: dados.low,\n        varBid: dados.varBid,\n        pctChange: dados.pctChange,\n        bid: dados.bid,\n        ask: dados.ask,\n        timestamp: dados.timestamp,\n        create_date: dados.create_date\n    };\n\n    // Retorna a mensagem modificada para continuar o fluxo\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 600,
        "wires": [
            [
                "fb35721b95f9f506",
                "4431601db61e0556"
            ]
        ]
    },
    {
        "id": "fb35721b95f9f506",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 680,
        "wires": []
    },
    {
        "id": "4431601db61e0556",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "Cotação Dólar",
        "group": "ca22fa0e.65a208",
        "order": 3,
        "format": "<div style=\"\n        font-family: Arial, sans-serif;\n        margin: 20px;\n        background-color: #f4f4f4;\n        color: #333;\n    }\n    table {\n        width: 100%;\n        margin-top: 20px;\n        border-collapse: collapse;\n    }\n    th, td {\n        padding: 8px;\n        text-align: left;\n        border-bottom: 1px solid #ddd;\n    }\n    th {\n        background-color: #4CAF50;\n        color: white;\n    }\n    td {\n        background-color: #f8f8f8;\n    }\n\">\n\n<h1>Cotação do Dólar Americano / Real Brasileiro</h1>\n<table>\n    <tr>\n        <th>Campo</th>\n        <th>Valor</th>\n    </tr>\n    <tr>\n        <td>Código</td>\n        <td>{{msg.payload.USDBRL.code}}</td>\n    </tr>\n    <tr>\n        <td>Código IN</td>\n        <td>{{payload.USDBRL.codein}}</td>\n    </tr>\n    <tr>\n        <td>Nome</td>\n        <td>{{payload.USDBRL.name}}</td>\n    </tr>\n    <tr>\n        <td>Máximo</td>\n        <td>{{msg.payload.high}}</td>\n    </tr>\n    <tr>\n        <td>Mínimo</td>\n        <td>{{payload.USDBRL.low}}</td>\n    </tr>\n    <tr>\n        <td>Variação</td>\n        <td>{{payload.USDBRL.varBid}}</td>\n    </tr>\n    <tr>\n        <td>Mudança Percentual</td>\n        <td>{{payload.USDBRL.pctChange}}%</td>\n    </tr>\n    <tr>\n        <td>Lance</td>\n        <td>{{payload.USDBRL.bid}}</td>\n    </tr>\n    <tr>\n        <td>Pedido</td>\n        <td>{{payload.USDBRL.ask}}</td>\n    </tr>\n    <tr>\n        <td>Timestamp</td>\n        <td>{{payload.USDBRL.timestamp}}</td>\n    </tr>\n    <tr>\n        <td>Data de Criação</td>\n        <td>{{payload.USDBRL.create_date}}</td>\n    </tr>\n</table>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 1730,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "c2a44f273a0ea217",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "tab": "4bc4965b467319f7",
        "name": "teste",
        "group": "",
        "order": 1,
        "interpolate": "linear",
        "nodata": "No Data",
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "x": 670,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4bc4965b467319f7",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": "1"
    }
]
